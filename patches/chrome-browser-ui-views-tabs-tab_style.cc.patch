diff --git a/chrome/browser/ui/views/tabs/tab_style.cc b/chrome/browser/ui/views/tabs/tab_style.cc
index 8f21aa7edbb3b0409c68e0d850541573710f993c..791e5dc1c2c161325990a43f0bb2d960d152e95a 100644
--- a/chrome/browser/ui/views/tabs/tab_style.cc
+++ b/chrome/browser/ui/views/tabs/tab_style.cc
@@ -128,7 +128,7 @@ class GM2TabStyle : public TabStyle {
 
 // Thickness in DIPs of the separator painted on the left and right edges of
 // the tab.
-constexpr int kSeparatorThickness = 1;
+constexpr int kSeparatorThickness = 2;
 
 // Returns the radius of the outer corners of the tab shape.
 int GetCornerRadius() {
@@ -144,7 +144,7 @@ int GetContentsHorizontalInsetSize() {
 
 // Returns the height of the separator between tabs.
 int GetSeparatorHeight() {
-  return ui::MaterialDesignController::touch_ui() ? 24 : 20;
+  return ui::MaterialDesignController::touch_ui() ? 24 : 24;
 }
 
 void DrawHighlight(gfx::Canvas* canvas,
@@ -267,6 +267,7 @@ gfx::Path GM2TabStyle::GetPath(PathType path_type,
   // When the radius shrinks, it leaves a gap between the bottom corners and the
   // edge of the tab. Make sure we account for this - and for any adjustment we
   // may have made to the location of the tab!
+  bottom_radius = 0;
   const float corner_gap = (right - tab_right) - bottom_radius;
 
   gfx::Path path;
@@ -383,7 +384,7 @@ TabStyle::SeparatorBounds GM2TabStyle::GetSeparatorBounds(float scale) const {
   separator_bounds.leading =
       gfx::RectF(aligned_bounds.x() + corner_radius,
                  aligned_bounds.y() +
-                     (aligned_bounds.height() - separator_size.height()) / 2,
+                     aligned_bounds.height() - separator_size.height(),
                  separator_size.width(), separator_size.height());
 
   separator_bounds.trailing = separator_bounds.leading;
@@ -696,12 +697,13 @@ void GM2TabStyle::PaintSeparators(gfx::Canvas* canvas) const {
                                                    SK_AlphaOPAQUE));
   };
 
+  const int separator_radius = separator_bounds.leading.width() / 2;
   cc::PaintFlags flags;
   flags.setAntiAlias(true);
   flags.setColor(separator_color(separator_opacities.left));
-  canvas->DrawRect(separator_bounds.leading, flags);
+  canvas->DrawRoundRect(separator_bounds.leading, separator_radius, flags);
   flags.setColor(separator_color(separator_opacities.right));
-  canvas->DrawRect(separator_bounds.trailing, flags);
+  canvas->DrawRoundRect(separator_bounds.trailing, separator_radius, flags);
 }
 
 // static
